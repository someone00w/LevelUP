@page "/quests/delete"
@using Microsoft.EntityFrameworkCore
@using LevelUP.Domain
@inject IDbContextFactory<LevelUP.Data.LevelUPContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Quest</h2>
    <hr />
    @if (quest is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">QuestName</dt>
            <dd class="col-sm-10">@quest.QuestName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@quest.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Category</dt>
            <dd class="col-sm-10">@quest.Category</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">XPReward</dt>
            <dd class="col-sm-10">@quest.XPReward</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">RankRequired</dt>
            <dd class="col-sm-10">@quest.RankRequired</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@quest.Status</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@quest.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@quest.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@quest.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@quest.UpdatedBy</dd>
        </dl>
        <EditForm method="post" Model="quest" OnValidSubmit="DeleteQuest" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(quest is null)">Delete</button> |
            <a href="/quests">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Quest? quest;

    [SupplyParameterFromQuery]
    private int QuestId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        quest = await context.Quest.FirstOrDefaultAsync(m => m.QuestId == QuestId);

        if (quest is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteQuest()
    {
        using var context = DbFactory.CreateDbContext();
        context.Quest.Remove(quest!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/quests");
    }
}
