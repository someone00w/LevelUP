@implements IDisposable
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Authorization

<div class="top-row px-4 navbar navbar-dark">
    <div class="container-fluid">
        <AuthorizeView>
                <NotAuthorized>
                     <a class="navbar-brand" href="/">LevelUP</a>
                </NotAuthorized>

                 <Authorized>
                     <a class="navbar-brand" href="/dashboard">LevelUP</a>
                 </Authorized>
        </AuthorizeView>

        <!-- Links (Login and Register) for guest users -->
        <div class="nav-links ml-auto">
            <AuthorizeView>
                <NotAuthorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link btn-solid" href="Account/Login">
                            <button type="submit" class="nav-link btn-regular">
                                <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Login
                            </button>
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link btn-transparent" href="Account/Register">
                            <button type="submit" class="nav-link btn-transparent">
                                <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Register
                            </button>
                        </NavLink>
                    </div>
                </NotAuthorized>

                <Authorized>
                    <!-- Links for authenticated users -->
                    <div class="nav-item px-3">
                        <NavLink class="nav-link btn-regular" href="Account/Manage">
                            <button type="submit" class="nav-link btn-regular">
                                <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Account
                            </button>
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link btn-regular" href="/achievements">
                            <button type="submit" class="nav-link btn-regular">
                                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Achievements
                            </button>
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link btn-regular" href="/quests">
                            <button type="submit" class="nav-link btn-regular">
                                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Quests
                            </button>
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link btn-regular" href="/workouts">
                            <button type="submit" class="nav-link btn-regular">
                                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Workouts
                            </button>
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <form action="Account/Logout" method="post" name="logoutForm">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="../" />
                            <button type="submit" class="nav-link btn-transparent">
                                <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                            </button>
                        </form>
                    </div>
                </Authorized>
            </AuthorizeView>
        </div>
    </div>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}